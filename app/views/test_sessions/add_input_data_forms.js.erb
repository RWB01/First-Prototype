<% data_array.each do |key,val| %>
	$("#student_variables_<%= escape_javascript val[:student] %>").html("<%= escape_javascript render 'variables', :variables => Algorithm.find(val[:algorithm]).variables %>");
	$('#algorithm_select_<%= escape_javascript val[:student] %> option[value="<%= escape_javascript val[:algorithm] %>"]').prop("selected",true);
	$("#algorithm_description_block_<%= escape_javascript val[:student] %>").html("<%= escape_javascript Algorithm.find(val[:algorithm]).description %>");
	$("#student_buttons_<%= escape_javascript val[:student] %>").show(100);
	$("#student_variables_<%= escape_javascript val[:student] %>").find(".variable").each(function() {
		generateInputData($(this));
	})
<% end %>

//проверка значения в числовых формах ввода
$(".input_cell").change(function(){
	var temp_value = parseInt(this.value);
	if (this.value.length == 0) {
		$(this).removeClass("error_cell");
		$(this).addClass("empty_cell");
	} else {
		if ((temp_value < parseInt($(this).data("minValue"))) || (temp_value > parseInt($(this).data("maxValue"))) || (isNaN(temp_value))) {
			$(this).addClass("error_cell");
			$(this).removeClass("empty_cell");
		} else {
			$(this).removeClass("error_cell");
			$(this).removeClass("empty_cell");
			$(this).val(temp_value);
		}
	}
});

//проверка длины строки в строковых формах ввода
$(".input_string_cell").change(function(){
	var string_length = this.value.length;
	if (this.value.length == 0) {
		$(this).removeClass("error_cell");
		$(this).addClass("empty_cell");
	} else {
		if ((string_length < parseInt($(this).data("minLength"))) || (string_length > parseInt($(this).data("maxLength")))) {
			$(this).addClass("error_cell");
			$(this).removeClass("empty_cell");
		} else {
			$(this).removeClass("error_cell");
			$(this).removeClass("empty_cell");
		}
	}
});